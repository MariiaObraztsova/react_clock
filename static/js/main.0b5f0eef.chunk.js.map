{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","setInterval","this","tick","previousProps","oldName","name","props","console","log","clearInterval","setState","toLocaleTimeString","React","Component","App","isClockVisible","clockName","showClock","hideClock","changeName","Math","round","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAMaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAwBC,aAAY,cAAU,KALhD,uDAOE,WAAqB,IAAD,OAClBC,KAAKF,QAAUC,aACb,kBAAM,EAAKE,SACX,OAVN,gCAcE,SAAmBC,GACjB,IAAMC,EAAUD,EAAcE,KAE1BD,IAAYH,KAAKK,MAAMD,MAEzBE,QAAQC,IAAR,qCAA0CJ,EAA1C,eAAwDH,KAAKK,MAAMD,SAnBzE,kCAuBE,WACEI,cAAcR,KAAKF,WAxBvB,kBA2BE,WACEE,KAAKS,SAAS,CACZb,KAAM,IAAIC,OAIZS,QAAQC,IAAIP,KAAKL,MAAMC,KAAKc,wBAjChC,oBAoCE,WACE,OACE,8CAEG,IACAV,KAAKL,MAAMC,KAAKc,4BAzCzB,GAA2BC,IAAMC,WCF3BC,E,4MACJlB,MAAQ,CACNmB,gBAAgB,EAChBC,UAAW,G,EAGbC,UAAY,WACV,EAAKP,SACH,CAAEK,gBAAgB,K,EAItBG,UAAY,WACV,EAAKR,SACH,CAAEK,gBAAgB,K,EAItBI,WAAa,WACX,EAAKT,SACH,CAAEM,UAAWI,KAAKC,MAAsB,IAAhBD,KAAKE,a,4CAIjC,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,6CAEEtB,KAAKL,MAAMmB,gBAAkB,cAAC,EAAD,CAAOV,KAAMJ,KAAKL,MAAMoB,YAEvD,sBAAKO,UAAU,eAAf,UACE,wBACEC,KAAK,SACLD,UAAU,gCACVE,QAASxB,KAAKgB,UAHhB,wBAQA,wBACEO,KAAK,SACLD,UAAU,gCACVE,QAASxB,KAAKiB,UAHhB,wBAQA,wBACEM,KAAK,SACLD,UAAU,sCACVE,QAASxB,KAAKkB,WAHhB,uC,GAhDQP,IAAMC,WA6DTC,IC9DfY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0b5f0eef.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: number\n};\n\nexport class Clock extends React.Component<Props> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId: NodeJS.Timer = setInterval(() => {}, 1000);\n\n  componentDidMount() {\n    this.timerId = setInterval(\n      () => this.tick(),\n      1000,\n    );\n  }\n\n  componentDidUpdate(previousProps: Props) {\n    const oldName = previousProps.name;\n\n    if (oldName !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${oldName} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date(),\n    });\n\n    // eslint-disable-next-line no-console\n    console.log(this.state.date.toLocaleTimeString());\n  }\n\n  render() {\n    return (\n      <p>\n        Current time:\n        {' '}\n        {this.state.date.toLocaleTimeString()}\n      </p>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  showClock = () => {\n    this.setState(\n      { isClockVisible: true },\n    );\n  };\n\n  hideClock = () => {\n    this.setState(\n      { isClockVisible: false },\n    );\n  };\n\n  changeName = () => {\n    this.setState(\n      { clockName: Math.round(Math.random() * 100) },\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        { this.state.isClockVisible && <Clock name={this.state.clockName} />}\n\n        <div className=\"App__buttons\">\n          <button\n            type=\"button\"\n            className=\"App__button App__button--show\"\n            onClick={this.showClock}\n          >\n            Show Clock\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"App__button App__button--hide\"\n            onClick={this.hideClock}\n          >\n            Hide Clock\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"App__button App__button--changeName\"\n            onClick={this.changeName}\n          >\n            Set random name\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}